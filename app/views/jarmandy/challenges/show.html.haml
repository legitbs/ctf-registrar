%h1
  = challenge.name

=render partial: 'shared/jarmandy_nav'

%nav
  %ul
    %li= link_to 'edit', edit_jarmandy_challenge_path(challenge)
    %li= link_to 'unlock', unlock_jarmandy_challenge_path(challenge), method: :post
    %li= link_to 'lock', lock_jarmandy_challenge_path(challenge), method: :post
    - if challenge.solved_at.nil?
      %li= link_to 'solve', solve_jarmandy_challenge_path(challenge), method: :post
    - else
      %li= link_to 'un-solve', unsolve_jarmandy_challenge_path(challenge), method: :post

%table.deflist
  %tbody
    %tr
      %th category
      %td= challenge.category.name
    %tr
      %th points
      %td= challenge.points
    %tr
      %th views
      %td= challenge.views
    %tr
      %th{title: 'unique views'} observations
      %td= challenge.observations.count
    %tr
      %th solves
      %td= challenge.solutions.count
    %tr
      %th clue
      %td= challenge.clue
    %tr
      %th formatted clue
      %td= RDiscount.new(challenge.clue).to_html.html_safe
    %tr
      %th unlocked
      %td= challenge.unlocked_at
    %tr
      %th first solved
      %td= challenge.solved_at
    %tr
      %th bcrypt'd answer
      %td= challenge.answer_digest

%h2 try to answer
= form_tag({}, method: 'get') do
  %p
    = text_field_tag :try, params[:try]
    = submit_tag 'try'
    - if params[:try]
      %span.explanation
        = params[:try]
        is
        - if BCrypt::Password.new(challenge.answer_digest) == params[:try]
          correct
        - else
          not correct

%h2 uploads
%nav
  %ul
    %li= link_to 'Add upload', new_jarmandy_upload_path(challenge_id: challenge.id)
- uploads = challenge.uploads.order(created_at: :desc).all
- unless uploads.blank?
  %p
    Uploaded files are not automatically linked to users, so
    make sure you link them in the clue.
  %table
    %thead
      %tr
        %th uploaded at (newest first)
        %th size
        %th url
        %th activities
    %tbody
      - uploads.each do |u|
        %tr
          %td
            = u.created_at
            %br
            = time_ago_in_words u.created_at
            ago
          %td.filesize= u.file.size
          %td.filename= link_to u.file, u.file.url
          %td= link_to 'Details', jarmandy_upload_path(u)
- else
  %p No uploads yet.

%h2 solution stats
- if stats = challenge.solution_stats
  %p= link_to 'Observations', jarmandy_challenge_observations_path(challenge_id: challenge.id)
  %p Solve count: #{stats['count']}
  %p
    Average time: #{stats['avg'].to_f.round} seconds
    (#{time_ago_in_words(Time.now - stats['avg'].to_f)})
  %p Standard deviation: #{stats['stddev'].to_f.round} seconds
- else
  %p not yet

%h2 solutions
%p
  = c = challenge.solutions.count
  solutions; most recent
  = [c, 25].min
  below
%table
  %thead
    %tr
      %th team
      %th time
  %tbody
    - challenge.solutions.order(created_at: :desc).limit(25).each do |s|
      %tr
        %td= s.team.name
        %td= s.created_at
